<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.fireflyhut.girafe.dao.mapper.ApiGrantTokenMapper">
  <resultMap id="BaseResultMap" type="cc.fireflyhut.girafe.pojo.dbobject.ApiGrantTokenDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="use_count" jdbcType="INTEGER" property="useCount" />
    <result column="is_valid" jdbcType="TINYINT" property="valid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, token, username, use_count, is_valid, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from gf_api_grant_token
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from gf_api_grant_token
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cc.fireflyhut.girafe.pojo.dbobject.ApiGrantTokenDO" useGeneratedKeys="true">
    insert into gf_api_grant_token (token, username, use_count, 
      is_valid, create_time, update_time
      )
    values (#{token,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{useCount,jdbcType=INTEGER}, 
      #{valid,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cc.fireflyhut.girafe.pojo.dbobject.ApiGrantTokenDO" useGeneratedKeys="true">
    insert into gf_api_grant_token
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="token != null">
        token,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="useCount != null">
        use_count,
      </if>
      <if test="valid != null">
        is_valid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="useCount != null">
        #{useCount,jdbcType=INTEGER},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cc.fireflyhut.girafe.pojo.dbobject.ApiGrantTokenDO">
    update gf_api_grant_token
    <set>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="useCount != null">
        use_count = #{useCount,jdbcType=INTEGER},
      </if>
      <if test="valid != null">
        is_valid = #{valid,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.fireflyhut.girafe.pojo.dbobject.ApiGrantTokenDO">
    update gf_api_grant_token
    set token = #{token,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      use_count = #{useCount,jdbcType=INTEGER},
      is_valid = #{valid,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByTokenWhenUse" parameterType="cc.fireflyhut.girafe.pojo.dbobject.ApiGrantTokenDO">
    update gf_api_grant_token
    <set>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      use_count = use_count + 1
    </set>
    where token = #{token,jdbcType=BIGINT}
  </update>
</mapper>